{"dependencies":[{"name":"/Users/nsthorat/Code/deeplearnjs-clients/float16/tfjs-core/test/package.json","includedInParent":true,"mtime":1524411533120},{"name":"/Users/nsthorat/Code/deeplearnjs-clients/float16/tfjs-core/test/.babelrc","includedInParent":true,"mtime":1524411533119},{"name":"/Users/nsthorat/Code/deeplearnjs-clients/float16/tfjs-core/tsconfig.json","includedInParent":true,"mtime":1524410852123},{"name":"./tensor","loc":{"line":3,"column":23}},{"name":"./util","loc":{"line":4,"column":19}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tensor_1 = require(\"./tensor\");\nvar util = require(\"./util\");\nexports.WEBGL_ENVS = {\n    'BACKEND': 'test-webgl'\n};\nexports.CPU_ENVS = {\n    'BACKEND': 'test-cpu'\n};\nexports.ALL_ENVS = {};\nexports.TEST_EPSILON = 1e-3;\nfunction expectArraysClose(actual, expected, epsilon) {\n    if (epsilon === void 0) { epsilon = exports.TEST_EPSILON; }\n    if (!(actual instanceof tensor_1.Tensor) && !(expected instanceof tensor_1.Tensor)) {\n        var aType = actual.constructor.name;\n        var bType = expected.constructor.name;\n        if (aType !== bType) {\n            throw new Error(\"Arrays are of different type actual: \" + aType + \" \" +\n                (\"vs expected: \" + bType));\n        }\n    }\n    else if (actual instanceof tensor_1.Tensor && expected instanceof tensor_1.Tensor) {\n        if (actual.dtype !== expected.dtype) {\n            throw new Error(\"Arrays are of different type actual: \" + actual.dtype + \" \" +\n                (\"vs expected: \" + expected.dtype + \".\"));\n        }\n        if (!util.arraysEqual(actual.shape, expected.shape)) {\n            throw new Error(\"Arrays are of different shape actual: \" + actual.shape + \" \" +\n                (\"vs expected: \" + expected.shape + \".\"));\n        }\n    }\n    var actualValues;\n    var expectedValues;\n    if (actual instanceof tensor_1.Tensor) {\n        actualValues = actual.dataSync();\n    }\n    else {\n        actualValues = actual;\n    }\n    if (expected instanceof tensor_1.Tensor) {\n        expectedValues = expected.dataSync();\n    }\n    else {\n        expectedValues = expected;\n    }\n    if (actualValues.length !== expectedValues.length) {\n        throw new Error(\"Arrays have different lengths actual: \" + actualValues.length + \" vs \" +\n            (\"expected: \" + expectedValues.length + \".\\n\") +\n            (\"Actual:   \" + actualValues + \".\\n\") +\n            (\"Expected: \" + expectedValues + \".\"));\n    }\n    for (var i = 0; i < expectedValues.length; ++i) {\n        var a = actualValues[i];\n        var e = expectedValues[i];\n        if (!areClose(a, Number(e), epsilon)) {\n            throw new Error(\"Arrays differ: actual[\" + i + \"] = \" + a + \", expected[\" + i + \"] = \" + e + \".\\n\" +\n                (\"Actual:   \" + actualValues + \".\\n\") +\n                (\"Expected: \" + expectedValues + \".\"));\n        }\n    }\n}\nexports.expectArraysClose = expectArraysClose;\nfunction expectPromiseToFail(fn, done) {\n    fn().then(function () { return done.fail(); }, function () { return done(); });\n}\nexports.expectPromiseToFail = expectPromiseToFail;\nfunction expectArraysEqual(actual, expected) {\n    return expectArraysClose(actual, expected, 0);\n}\nexports.expectArraysEqual = expectArraysEqual;\nfunction expectNumbersClose(a, e, epsilon) {\n    if (epsilon === void 0) { epsilon = exports.TEST_EPSILON; }\n    if (!areClose(a, e, epsilon)) {\n        throw new Error(\"Numbers differ: actual === \" + a + \", expected === \" + e);\n    }\n}\nexports.expectNumbersClose = expectNumbersClose;\nfunction areClose(a, e, epsilon) {\n    if (isNaN(a) && isNaN(e)) {\n        return true;\n    }\n    if (isNaN(a) || isNaN(e) || Math.abs(a - e) > epsilon) {\n        return false;\n    }\n    return true;\n}\nfunction expectValuesInRange(actual, low, high) {\n    var actualVals;\n    if (actual instanceof tensor_1.Tensor) {\n        actualVals = actual.dataSync();\n    }\n    else {\n        actualVals = actual;\n    }\n    for (var i = 0; i < actualVals.length; i++) {\n        if (actualVals[i] < low || actualVals[i] > high) {\n            throw new Error(\"Value out of range:\" + actualVals[i] + \" low: \" + low + \", high: \" + high);\n        }\n    }\n}\nexports.expectValuesInRange = expectValuesInRange;\n","map":{"version":3,"file":"test_util.js","sourceRoot":"","sources":["../src/test_util.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Features} from './environment';\nimport {Tensor} from './tensor';\nimport {TypedArray} from './types';\nimport * as util from './util';\n\n// Constraints for testing.\nexport const WEBGL_ENVS: Features = {\n  'BACKEND': 'test-webgl'\n};\nexport const CPU_ENVS: Features = {\n  'BACKEND': 'test-cpu'\n};\nexport const ALL_ENVS = {};\n\n/** Accuracy for tests. */\nexport const TEST_EPSILON = 1e-3;\n\nexport function expectArraysClose(\n    actual: Tensor|TypedArray|number[],\n    expected: Tensor|TypedArray|number[]|boolean[], epsilon = TEST_EPSILON) {\n  if (!(actual instanceof Tensor) && !(expected instanceof Tensor)) {\n    const aType = actual.constructor.name;\n    const bType = expected.constructor.name;\n\n    if (aType !== bType) {\n      throw new Error(\n          `Arrays are of different type actual: ${aType} ` +\n          `vs expected: ${bType}`);\n    }\n  } else if (actual instanceof Tensor && expected instanceof Tensor) {\n    if (actual.dtype !== expected.dtype) {\n      throw new Error(\n          `Arrays are of different type actual: ${actual.dtype} ` +\n          `vs expected: ${expected.dtype}.`);\n    }\n    if (!util.arraysEqual(actual.shape, expected.shape)) {\n      throw new Error(\n          `Arrays are of different shape actual: ${actual.shape} ` +\n          `vs expected: ${expected.shape}.`);\n    }\n  }\n\n  let actualValues: TypedArray|number[];\n  let expectedValues: TypedArray|number[]|boolean[];\n  if (actual instanceof Tensor) {\n    actualValues = actual.dataSync();\n  } else {\n    actualValues = actual;\n  }\n  if (expected instanceof Tensor) {\n    expectedValues = expected.dataSync();\n  } else {\n    expectedValues = expected;\n  }\n\n  if (actualValues.length !== expectedValues.length) {\n    throw new Error(\n        `Arrays have different lengths actual: ${actualValues.length} vs ` +\n        `expected: ${expectedValues.length}.\\n` +\n        `Actual:   ${actualValues}.\\n` +\n        `Expected: ${expectedValues}.`);\n  }\n  for (let i = 0; i < expectedValues.length; ++i) {\n    const a = actualValues[i];\n    const e = expectedValues[i];\n\n    if (!areClose(a, Number(e), epsilon)) {\n      throw new Error(\n          `Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${e}.\\n` +\n          `Actual:   ${actualValues}.\\n` +\n          `Expected: ${expectedValues}.`);\n    }\n  }\n}\n\nexport interface DoneFn {\n  (): void;\n  fail: (message?: Error|string) => void;\n}\n\nexport function expectPromiseToFail(fn: () => Promise<{}>, done: DoneFn): void {\n  fn().then(() => done.fail(), () => done());\n}\n\nexport function expectArraysEqual(\n    actual: Tensor|TypedArray|number[],\n    expected: Tensor|TypedArray|number[]|boolean[]) {\n  return expectArraysClose(actual, expected, 0);\n}\n\nexport function expectNumbersClose(\n    a: number, e: number, epsilon = TEST_EPSILON) {\n  if (!areClose(a, e, epsilon)) {\n    throw new Error(`Numbers differ: actual === ${a}, expected === ${e}`);\n  }\n}\n\nfunction areClose(a: number, e: number, epsilon: number): boolean {\n  if (isNaN(a) && isNaN(e)) {\n    return true;\n  }\n  if (isNaN(a) || isNaN(e) || Math.abs(a - e) > epsilon) {\n    return false;\n  }\n  return true;\n}\n\nexport function expectValuesInRange(\n    actual: Tensor|TypedArray|number[], low: number, high: number) {\n  let actualVals: TypedArray|number[];\n  if (actual instanceof Tensor) {\n    actualVals = actual.dataSync();\n  } else {\n    actualVals = actual;\n  }\n  for (let i = 0; i < actualVals.length; i++) {\n    if (actualVals[i] < low || actualVals[i] > high) {\n      throw new Error(\n          `Value out of range:${actualVals[i]} low: ${low}, high: ${high}`);\n    }\n  }\n}\n"]}},"hash":"4a200bb0ce34ed84292d2110e6e4b2d3","cacheData":{"env":{}}}